{ level: 'error', timestamp: '2020-05-20T12:55:25.036Z' }
{ level: 'error', timestamp: '2020-05-20T12:55:26.418Z' }
{ level: 'error', timestamp: '2020-05-20T13:03:17.112Z' }
{ level: 'error', timestamp: '2020-05-20T13:03:36.439Z' }
{ level: 'error', timestamp: '2020-05-20T13:03:51.333Z' }
{ level: 'error', timestamp: '2020-05-20T13:04:35.146Z' }
{ level: 'error', timestamp: '2020-05-20T13:24:10.969Z' }
{ level: 'error', timestamp: '2020-05-20T13:27:05.446Z' }
{ level: 'error', timestamp: '2020-05-20T13:30:20.994Z' }
{ level: 'error', timestamp: '2020-05-20T13:32:20.991Z' }
{ level: 'error', timestamp: '2020-05-20T13:33:18.033Z' }
{ level: 'error', timestamp: '2020-05-20T13:34:38.722Z' }
{ level: 'error', timestamp: '2020-05-20T13:34:58.234Z' }
{ level: 'error', timestamp: '2020-05-20T13:36:38.724Z' }
{ level: 'error', timestamp: '2020-05-20T13:36:58.236Z' }
{
  errors: {
    roleId: MongooseError [ValidatorError]: Path `roleId` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at ObjectId.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `roleId` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `roleId` is required.',
        type: 'required',
        path: 'roleId',
        value: undefined
      },
      kind: 'required',
      path: 'roleId',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    status: MongooseError [ValidatorError]: Path `status` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at SchemaString.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `status` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `status` is required.',
        type: 'required',
        path: 'status',
        value: undefined
      },
      kind: 'required',
      path: 'status',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'User validation failed',
  message: 'User validation failed: roleId: Path `roleId` is required., status: Path `status` is required.',
  name: 'ValidationError',
  level: 'error',
  timestamp: '2020-05-20T13:38:10.473Z'
}
{
  errors: {
    roleId: MongooseError [ValidatorError]: Path `roleId` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at ObjectId.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `roleId` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `roleId` is required.',
        type: 'required',
        path: 'roleId',
        value: undefined
      },
      kind: 'required',
      path: 'roleId',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    status: MongooseError [ValidatorError]: Path `status` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at SchemaString.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `status` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `status` is required.',
        type: 'required',
        path: 'status',
        value: undefined
      },
      kind: 'required',
      path: 'status',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'User validation failed',
  message: 'User validation failed: roleId: Path `roleId` is required., status: Path `status` is required.',
  name: 'ValidationError',
  level: 'error',
  timestamp: '2020-05-20T13:39:36.712Z'
}
{
  errors: {
    roleId: MongooseError [ValidatorError]: Path `roleId` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at ObjectId.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `roleId` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `roleId` is required.',
        type: 'required',
        path: 'roleId',
        value: undefined
      },
      kind: 'required',
      path: 'roleId',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    status: MongooseError [ValidatorError]: Path `status` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at SchemaString.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `status` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `status` is required.',
        type: 'required',
        path: 'status',
        value: undefined
      },
      kind: 'required',
      path: 'status',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'User validation failed',
  message: 'User validation failed: roleId: Path `roleId` is required., status: Path `status` is required.',
  name: 'ValidationError',
  level: 'error',
  timestamp: '2020-05-20T13:41:21.051Z'
}
{
  errors: {
    roleId: MongooseError [ValidatorError]: Path `roleId` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at ObjectId.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `roleId` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `roleId` is required.',
        type: 'required',
        path: 'roleId',
        value: undefined
      },
      kind: 'required',
      path: 'roleId',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    status: MongooseError [ValidatorError]: Path `status` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at SchemaString.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `status` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `status` is required.',
        type: 'required',
        path: 'status',
        value: undefined
      },
      kind: 'required',
      path: 'status',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'User validation failed',
  message: 'User validation failed: roleId: Path `roleId` is required., status: Path `status` is required.',
  name: 'ValidationError',
  level: 'error',
  timestamp: '2020-05-20T13:41:36.465Z'
}
{
  errors: {
    roleId: MongooseError [ValidatorError]: Path `roleId` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at ObjectId.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `roleId` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `roleId` is required.',
        type: 'required',
        path: 'roleId',
        value: undefined
      },
      kind: 'required',
      path: 'roleId',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    status: MongooseError [ValidatorError]: Path `status` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at SchemaString.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `status` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `status` is required.',
        type: 'required',
        path: 'status',
        value: undefined
      },
      kind: 'required',
      path: 'status',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'User validation failed',
  message: 'User validation failed: roleId: Path `roleId` is required., status: Path `status` is required.',
  name: 'ValidationError',
  level: 'error',
  timestamp: '2020-05-20T13:44:49.857Z'
}
{
  errors: {
    roleId: MongooseError [ValidatorError]: Path `roleId` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at ObjectId.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `roleId` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `roleId` is required.',
        type: 'required',
        path: 'roleId',
        value: undefined
      },
      kind: 'required',
      path: 'roleId',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    status: MongooseError [ValidatorError]: Path `status` is required.
        at new ValidatorError (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\error\validator.js:29:11)
        at validate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1178:13)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1161:7
        at Array.forEach (<anonymous>)
        at SchemaString.SchemaType.doValidate (C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\schematype.js:1106:14)
        at C:\Users\manjeet.DESKTOP-O0RANEV\Pictures\study\GIT\node\express\project-mgmt\node_modules\mongoose\lib\document.js:2378:18
        at processTicksAndRejections (internal/process/task_queues.js:79:11) {
      message: 'Path `status` is required.',
      name: 'ValidatorError',
      properties: {
        validator: [Function],
        message: 'Path `status` is required.',
        type: 'required',
        path: 'status',
        value: undefined
      },
      kind: 'required',
      path: 'status',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'User validation failed',
  message: 'User validation failed: roleId: Path `roleId` is required., status: Path `status` is required.',
  name: 'ValidationError',
  level: 'error',
  timestamp: '2020-05-20T13:46:15.939Z'
}
